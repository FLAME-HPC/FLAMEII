// namespace shorthand
namespace po = boost::program_options;

// returns time in seconds
static double get_time(void) {
  struct timeval now;
  gettimeofday(&now, NULL);
  return now.tv_sec + (now.tv_usec * 1.e-6);
}

void die(const std::string& message, int rc = 2) {
  std::cerr << "Error: " << message << std::endl;
  exit(rc);
}

// Function defined further down
void handle_program_options(int argc, const char* argv[],
    std::string * pop_path, int * num_iters, int * num_cores);

int main(int argc, const char* argv[]) {
  std::string pop_path;
  int num_iters;
  int num_cores;

  handle_program_options(argc, argv, &pop_path, &num_iters, &num_cores);

  if (num_iters < 1)
    die("Invalid value for NUM_ITERATIONS");

  if (num_cores < 1)
    die("Invalid value for number of cores", 3);

  if (num_cores > 1)
    printf("Using %d cores.\n", num_cores);

  #ifdef DBGBUILD
    srand(1);  // for debug, fix random seed
  #else
    srand(time(NULL));
  #endif
