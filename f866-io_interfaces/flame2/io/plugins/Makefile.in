CXX = @CXX@ @CPPFLAGS@ @CXXFLAGS@
LIBXML2_CPPFLAGS = @LIBXML2_CPPFLAGS@
LIBXML2_LIBS = @LIBXML2_LIBS@
BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@
BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@
# local flags to create shared objects
PLUGIN_FLAGS = -g -shared

PLUGINS = io_xml_pop.plugin \
     io_cli_pop.plugin \
     io_csv_pop.plugin \
     io_sqlite_pop.plugin \
     io_hdf5_pop.plugin

all: $(PLUGINS)

io_xml_pop.plugin: io_xml_pop.cpp xml_writer.cpp
	$(CXX) $(PLUGIN_FLAGS) $(LIBXML2_CPPFLAGS) \
	  io_xml_pop.cpp xml_writer.cpp -o io_xml_pop.plugin \
	  $(BOOST_SYSTEM_LIB) $(BOOST_FILESYSTEM_LIB) $(LIBXML2_LIBS)

io_cli_pop.plugin: io_cli_pop.cpp
	$(CXX) $(PLUGIN_FLAGS) io_cli_pop.cpp -o io_cli_pop.plugin

io_csv_pop.plugin: io_csv_pop.cpp
	$(CXX) $(PLUGIN_FLAGS) io_csv_pop.cpp -o io_csv_pop.plugin

io_sqlite_pop.plugin: io_sqlite_pop.cpp
	$(CXX) $(PLUGIN_FLAGS) io_sqlite_pop.cpp -o io_sqlite_pop.plugin -lsqlite3

# using hdf5 compile script for compiling
# (use -show to see the libraries being linked)
io_hdf5_pop.plugin: io_hdf5_pop.cpp
	h5c++ $(PLUGIN_FLAGS) io_hdf5_pop.cpp -o io_hdf5_pop.plugin

install:
	@MKDIR_P@ @FLAME2_INSTALL_PLUGINDIR@
	@INSTALL_DATA@ $(PLUGINS) '@FLAME2_INSTALL_PLUGINDIR@'

clean:
	rm -f *.plugin *.o