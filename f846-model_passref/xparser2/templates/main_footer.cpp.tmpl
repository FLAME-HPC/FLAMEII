  // Validate model
  model.validate();

  double start_time, stop_time, total_time;
  // Create simulation using model and path to initial pop, then run simulation
  try {
    flame::sim::Simulation s(model, pop_path);
    start_time = get_time();

    // Run simulation
    s.start(static_cast<size_t>(num_iters),
            static_cast<size_t>(num_cores));
  } catch(const flame::exceptions::flame_io_exception& e) {
    die(std::string("Invalid data file\n") + e.what());
  }

  stop_time = get_time();
  total_time = stop_time - start_time;
  printf("Execution time - %d:%02d:%03d [mins:secs:msecs]\n",
           static_cast<int>(total_time/60),
           static_cast<int>(total_time) % 60,
           ((static_cast<int>(total_time * 1000.0)) % 1000));

  return 0;
}
